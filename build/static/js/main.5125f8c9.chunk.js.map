{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","App.js","registerServiceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","Header","href","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","App","es","Layout_Header","react_router","exact","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5125f8c9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"Dashboard.html\">\n            Personal Project Management Tool\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/dashboard\">\n                  Dashboard\n                </a>\n              </li>\n            </ul>\n\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link \" href=\"register.html\">\n                  Sign Up\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"login.html\">\n                  Login\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              // insert tasks here\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/addProject\" component={AddProject} />\n            <Route exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <Route exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <Route\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <Route\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}